name: Build

inputs:
  testFramework:
    description: 'Test Frameworkd'
    default: ''
    required: true
    type: string
  configuration:
    description: 'configuration'
    default: ''
    required: true
    type: string
  powerShellPlatform:
    description: 'PowerShell Platform'
    default: ''
    required: true
    type: string
  
runs:
  using: 'composite'
  steps:
    - name: Test
      shell: pwsh
      run: |
        Write-Host "testFramework: ${{ inputs.testFramework }}"
        Write-Host "configuration: ${{ inputs.configuration }}"
        Write-Host "powerShellPlatform: ${{ inputs.powerShellPlatform }}"
    - name: Test 2
      shell: pwsh
      env: 
          inputs: ${{ toJson(inputs) }}
          github: ${{ toJson(github) }}
      run: |
        Write-Host "----------------------------- 1"
        Write-Host $env:inputs
        Write-Host "----------------------------- 2"
        Write-Host $env:github
        Write-Host "----------------------------- 3"
    - name: List PR Changed Files
      uses: ./.github/workflows/get-pr-changed-files
    - name: Test 3
      shell: pwsh
      run: |
        #Get-ChildItem -Depth 2 | Resolve-Path -Relative
        #Write-Host "-----------------------------"
        Get-Content .\artifacts\FilesChanged.txt
    - name: Install Autorest & Setup environment for Autorest
      if: ${{ env.IsGenerateBased == 'true' }}
      shell: pwsh
      run: |
        npm install autorest@latest
        $env:NODE_OPTIONS=\"--max-old-space-size=65536\"
    - name: Check Ignored File
      shell: pwsh
      run: |
        ./tools/CheckIgnoredFile.ps1
    - name: Check Dotnet Version 1
      shell: pwsh
      run: |
        dotnet --info
    - name: Use .NET Core sdk 6.0.x
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'
    - name: Set Dotnet SDK Version
      shell: pwsh
      run: |
        $SdkVersion=(dotnet --list-sdks | Select-String '6.\d{1}.\d{3}').Matches[0].Value
        dotnet new globaljson --sdk-version $SdkVersion --force
    - name: Check Dotnet Version 2
      shell: pwsh
      run: |
        dotnet --info
    - name: Build
      shell: pwsh
      run: |
        dotnet msbuild build.proj /t:Build /p:'Configuration=${{ inputs.configuration }};TestFramework=${{ inputs.testFramework }};PullRequestNumber=${{ github.event.number}}'
    - name: Save ${{ inputs.testFramework }}
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with: 
        name: build-${{ inputs.testFramework }}
        path: artifacts
